name: Build debian
on:
  - push
  - workflow_dispatch

permissions:
  contents: write

concurrency:
  group: build
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  metadata-orig:
    name: Discover orig metadata
    runs-on: ubuntu-22.04

    outputs:
      orig: ${{ steps.matrix.outputs.orig }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          path: main

      - name: Check out orig
        uses: actions/checkout@v4
        with:
          ref: orig
          path: orig

      - name: Generate orig matrix
        id: matrix
        run: |
          orig="$(./main/.scripts/discover-orig.sh ./main ./orig)"
          echo "orig=${orig}" >> $GITHUB_OUTPUT

  orig:
    name: Generate orig
    runs-on: ubuntu-22.04
    needs:
      - metadata-orig

    if: ${{ needs.metadata-orig.outputs.orig != '[]' && needs.metadata-orig.outputs.orig != '' }}

    strategy:
      matrix:
        orig: ${{ fromJSON(needs.metadata-orig.outputs.orig) }}

    steps:
      - name: Parse metadata
        id: metadata
        run: |
          echo "repo=$(echo ${{ matrix.orig }} | cut -d' ' -f1)" >> $GITHUB_OUTPUT
          echo "repodir=$(echo ${{ matrix.orig }} | cut -d' ' -f1 | sed -e 's/-snapshot$//')" >> $GITHUB_OUTPUT
          echo "gh_fullrepo=$(echo ${{ matrix.orig }} | cut -d' ' -f2)" >> $GITHUB_OUTPUT
          echo "gh_repo=$(echo ${{ matrix.orig }} | cut -d' ' -f2 | cut -d/ -f2)" >> $GITHUB_OUTPUT
          echo "ref=$(echo ${{ matrix.orig }} | cut -d' ' -f3)" >> $GITHUB_OUTPUT

      - name: Check out code
        uses: actions/checkout@v4
        with:
          path: main

      - name: Check out orig
        uses: actions/checkout@v4
        with:
          ref: orig
          path: orig

      - name: Check out source repository
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.metadata.outputs.gh_fullrepo }}
          ref: ${{ steps.metadata.outputs.ref }}
          path: ${{ steps.metadata.outputs.gh_repo }}
          fetch-depth: 0

      - name: Generate orig
        working-directory: ${{ steps.metadata.outputs.gh_repo }}
        run: |
          mkdir -p ../output
          "../main/${{ steps.metadata.outputs.repodir }}/orig.sh" ../output

      - name: Upload source artifacts
        uses: actions/upload-artifact@v3
        with:
          name: orig_${{ steps.metadata.outputs.repo }}
          path: output

  commit-orig:
    name: Commit orig
    runs-on: ubuntu-22.04
    needs:
      - orig

    steps:
      - name: Download source artifacts
        uses: actions/download-artifact@v3
        with:
          path: new

      - run: sudo apt install tree && tree new

  # build:
  #   name: Build
  #   runs-on: ubuntu-22.04
  #   needs:
  #     - metadata
  #     - sources

  #   strategy:
  #     matrix: ${{ fromJSON(needs.metadata.outputs.build_ids) }}

  #   steps:
  #     - name: Parse metadata
  #       id: metadata
  #       run: |
  #         echo "repo=$(echo ${{ matrix.build_id }} | cut -d' ' -f1)" >> $GITHUB_OUTPUT
  #         echo "codename=$(echo ${{ matrix.build_id }} | cut -d' ' -f2 | cut -d_ -f2)" >> $GITHUB_OUTPUT
  #         echo "repodir=$(echo ${{ matrix.build_id }} | cut -d' ' -f1 | sed -e 's/-snapshot$//')" >> $GITHUB_OUTPUT

  #     - name: Check out code
  #       uses: actions/checkout@v4
  #       with:
  #         path: src

  #     - name: Download source artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: source-${{ steps.metadata.outputs.repo }}
  #         path: source

  #     - name: Locate source file
  #       id: source
  #       working-directory: source
  #       run: |
  #         echo "source=$(ls -1 *.orig.* | head -n 1)" >> $GITHUB_OUTPUT

  #     - name: Build
  #       run: |
  #         ./src/.scripts/build.sh \
  #           "${{ steps.metadata.outputs.repo }}" \
  #           "${{ steps.metadata.outputs.codename }}" \
  #           "./source/${{ steps.source.outputs.source }}" \
  #           "./src/${{ steps.metadata.outputs.repodir }}" \
  #           ./output

  #     - name: Upload build artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: package-${{ steps.metadata.outputs.repo }}-${{ steps.metadata.outputs.codename }}
  #         path: output
